version: '3.8'

services:
  app:
    build: 
      context: .
      target: runner
    container_name: tenantx-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    depends_on:
      - mongodb
      - redis
    networks:
      - tenantx-network
    volumes:
      - app_logs:/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tenantx.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.routers.tenantx.tls=true"
      - "traefik.http.routers.tenantx.tls.certresolver=letsencrypt"

  mongodb:
    image: mongo:7.0
    container_name: tenantx-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=tenantx
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - tenantx-network
    command: mongod --auth --bind_ip_all

  redis:
    image: redis:7-alpine
    container_name: tenantx-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tenantx-network
    command: redis-server --requirepass ${REDIS_PASSWORD:-defaultpassword}

  nginx:
    image: nginx:alpine
    container_name: tenantx-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      - app
    networks:
      - tenantx-network

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: tenantx-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - tenantx-network
    profiles:
      - monitoring

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: tenantx-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - tenantx-network
    profiles:
      - monitoring

networks:
  tenantx-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  app_logs:
  nginx_logs:
  certbot_certs:
  certbot_www:
  prometheus_data:
  grafana_data:
